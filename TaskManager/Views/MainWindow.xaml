<Window x:Class="TaskManager.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:res="clr-namespace:TaskManager.Properties" 
        xmlns:TaskManager="clr-namespace:TaskManager"
        Title="{x:Static res:Resources.Title}" Height="460" Width="1000"
        DataContext="TaskManagerViewModel" ResizeMode="NoResize">
    <Window.Resources>
        <TaskManager:StatusConverter x:Key="StatusConverter" />
    </Window.Resources>
    <DockPanel LastChildFill="True" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <StackPanel Orientation="Vertical" DockPanel.Dock="Left" Width="250" HorizontalAlignment="Left" VerticalAlignment="Stretch"  Margin="0,0,5,0">
            <Button Content="{x:Static res:Resources.AddTask}" DockPanel.Dock="Bottom" Command="{Binding AddNewTaskCommand}"></Button>
            <TreeView Name="TasksTree" ItemsSource="{Binding TasksModels, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedItemChanged="TasksTree_SelectedItemChanged">
            <TreeView.ItemContainerStyle>
                <!-- This Style binds a TreeViewItem to a TaskManagerViewModel. -->
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Setter Property="FontWeight" Value="Normal" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>

            <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <TextBlock>
                            <TextBlock.Text>
                                 <MultiBinding StringFormat="{}{0} - {1}">
                                    <Binding Path="Name"></Binding>
                                    <Binding Path="SelectedTask.StatusID" Converter="{StaticResource StatusConverter}"></Binding>
                                 </MultiBinding>
                            </TextBlock.Text>
                    </TextBlock>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
            
        </StackPanel>
        <StackPanel DataContext="{Binding ElementName=TasksTree, Path=SelectedValue}" Orientation="Vertical" HorizontalAlignment="Stretch" DockPanel.Dock="Top">
            <!--Header-->
            <DockPanel Width="Auto" HorizontalAlignment="Stretch" Margin="0,0,0,5">
                <Label Content="{x:Static res:Resources.TaskName}"></Label>
                <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"></TextBox>
            </DockPanel>
            <!--Performer and status-->
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0,0,0,5">
                <Label Content="{x:Static res:Resources.PerformerName}"></Label>
                <TextBox Text="{Binding SelectedTask.Performer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="150"></TextBox>
                <Label Content="{x:Static res:Resources.TaskStatus}"></Label>
                <ComboBox ItemsSource="{Binding TaskStatusList}" SelectedValue="{Binding Status, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="ID" DisplayMemberPath="Name" Width="150"></ComboBox>
            </StackPanel>
            <!--Registration date and complete date-->
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0,0,0,5">
                <Label Content="{x:Static res:Resources.RegistrationDate}"></Label>
                <DatePicker SelectedDate="{Binding SelectedTask.Date, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></DatePicker>
                <Label Content="{x:Static res:Resources.CompleteDate}"></Label>
                <DatePicker SelectedDate="{Binding SelectedTask.CompletionDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></DatePicker>
            </StackPanel>
            <!--RunTime-->
            <GroupBox Header="{x:Static res:Resources.TaskRunTime}">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <Label Content="{x:Static res:Resources.ActualRunTime}"/>
                <TextBox Text="{Binding SelectedTask.ActualRunTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="75"></TextBox>
                <Label Content="{x:Static res:Resources.PlannedRunTime}"></Label>
                <TextBox Text="{Binding SelectedTask.PlannedRunTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="75"></TextBox>
            </StackPanel>
            </GroupBox>
            <GroupBox Header="{x:Static res:Resources.ChildTaskRunTime}">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <Label Content="{x:Static res:Resources.ActualRunTime}"></Label>
                    <Label Content="{Binding ActualRunTimeTotal, Mode=OneWay}" Width="75"></Label>
                    <Label Content="{x:Static res:Resources.PlannedRunTime}"></Label>
                    <Label Content="{Binding PlannedRunTimeTotal, Mode=OneWay}" Width="75"></Label>                
                </StackPanel>
            </GroupBox>
        </StackPanel>
        <!--Description-->
        <StackPanel x:Name="Descr">
            <Label Content="{x:Static res:Resources.DescriptionOfTask}"></Label>
            <TextBox Text="{Binding ElementName=TasksTree, Path=SelectedValue.SelectedTask.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" AcceptsReturn="True" Height="200"></TextBox>            
            <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal">
                <Button Content="{x:Static res:Resources.AddChildTask}" Margin="2" Command="{Binding AddChildTaskCommand}"></Button>
                <Button Content="{x:Static res:Resources.RemoveTask}" Margin="2"  Command="{Binding RemoveSelectedTaskCommand}"></Button>
                <Button Content="{x:Static res:Resources.SaveChanges}" Margin="2"  Command="{Binding SaveChangesCommand}"></Button>
            </StackPanel>
        </StackPanel>
        
    </DockPanel>
</Window>
