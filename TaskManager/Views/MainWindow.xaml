<Window x:Class="TaskManager.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:res="clr-namespace:TaskManager.Properties" 
        xmlns:TaskManager="clr-namespace:TaskManager"
        Title="{x:Static res:Resources.Title}" Height="460" Width="780" ResizeMode="NoResize">
    <Window.Resources>
        <TaskManager:StatusConverter x:Key="StatusConverter" />
        <TaskManager:StatusColorConverter x:Key="StatusColorConverter" />
        <!--Error template-->
        <ControlTemplate x:Key="DefaultErrorTemplate">
            <DockPanel DataContext="{Binding ElementName=adorner, 
                                                               Path=AdornedElement.(Validation.Errors)/ErrorContent}">
                <Ellipse x:Name="Ellipse" 
                            DockPanel.Dock="Right" 
                            Margin="2,0,2,0" 
                            Width="14" Height="14" 
                            VerticalAlignment="Center" 
                            Stroke="#40000000" StrokeThickness="2" Fill="Red">
                    <Ellipse.ToolTip>
                        <Border MaxWidth="350">
                            <ContentControl FontSize="14" Content="{Binding}"/>
                        </Border>
                    </Ellipse.ToolTip>
                </Ellipse>
                <Border BorderBrush="#40FFAF00" BorderThickness="2" IsHitTestVisible="False">
                    <Border.Background>
                        <SolidColorBrush Color="Red" Opacity="0.2"/>
                    </Border.Background>
                    <AdornedElementPlaceholder Margin="-2" Name="adorner"/>
                </Border>
            </DockPanel>
        </ControlTemplate>
    </Window.Resources>
    <!--Main dock panel-->
    <DockPanel LastChildFill="True" Height="Auto" Width="Auto" HorizontalAlignment="Left"  VerticalAlignment="Stretch">
        <StackPanel Orientation="Vertical" DockPanel.Dock="Left" Width="275" HorizontalAlignment="Left" VerticalAlignment="Stretch"  Margin="0,0,5,0">
            <Button Content="{x:Static res:Resources.AddTask}" DockPanel.Dock="Bottom" Command="{Binding AddNewTaskCommand}" FontWeight="Normal" FontSize="12"></Button>
            <!--Tasks tree-->
            <TreeView Name="TasksTree" ItemsSource="{Binding TasksModels, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="Auto">
                <TreeView.ItemContainerStyle>
                <!-- This Style binds a TreeViewItem to a TaskManagerViewModel. -->
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Setter Property="FontWeight" Value="Normal" />
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>

            <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                        <StackPanel Orientation="Horizontal">
                            <Ellipse x:Name="StatusEllipse" 
                                        DockPanel.Dock="Left" 
                                        Width="10" Height="10" 
                                        VerticalAlignment="Center" 
                                        Stroke="#40000000" StrokeThickness="2" Fill="{Binding Path=Task.StatusID, Converter={StaticResource StatusColorConverter}}">
                            </Ellipse>
                            <TextBlock>
                                    <TextBlock.Text>
                                         <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path="Name"></Binding>
                                            <Binding Path="Task.StatusID" Converter="{StaticResource StatusConverter}"></Binding>
                                         </MultiBinding>
                                    </TextBlock.Text>
                            </TextBlock>
                    </StackPanel>
                    </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
            
        </StackPanel>
        <StackPanel DataContext="{Binding ElementName=TasksTree, Path=SelectedValue}" Orientation="Vertical" HorizontalAlignment="Stretch" DockPanel.Dock="Top">
            <!--Header-->
            <DockPanel Width="Auto" HorizontalAlignment="Stretch" Margin="0,0,0,5">
                <Label Content="{x:Static res:Resources.TaskName}"></Label>
                <TextBox Validation.ErrorTemplate="{StaticResource DefaultErrorTemplate}" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" HorizontalAlignment="Stretch"></TextBox>
            </DockPanel>
            <!--Performer and status-->
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0,0,0,5">
                <Label Content="{x:Static res:Resources.PerformerName}"></Label>
                <TextBox Text="{Binding Task.Performer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="150"></TextBox>
                <Label Content="{x:Static res:Resources.TaskStatus}"></Label>
                <ComboBox Validation.ErrorTemplate="{StaticResource DefaultErrorTemplate}" ItemsSource="{Binding TaskStatusList}" SelectedValue="{Binding Status, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}" SelectedValuePath="ID" DisplayMemberPath="Name" Width="150"></ComboBox>
            </StackPanel>
            <!--Registration date and complete date-->
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0,0,0,5">
                <Label Content="{x:Static res:Resources.RegistrationDate}"></Label>
                <DatePicker SelectedDate="{Binding Task.Date, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></DatePicker>
                <Label Content="{x:Static res:Resources.CompleteDate}"></Label>
                <DatePicker SelectedDate="{Binding Task.CompletionDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></DatePicker>
            </StackPanel>

            <!--RunTime-->
            <GroupBox Header="{x:Static res:Resources.TaskRunTime}">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <Label Content="{x:Static res:Resources.ActualRunTime}"/>
                <TextBox Validation.ErrorTemplate="{StaticResource DefaultErrorTemplate}" Text="{Binding Task.ActualRunTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="75"></TextBox>
                <Label Content="{x:Static res:Resources.PlannedRunTime}"></Label>
                <TextBox Text="{Binding Task.PlannedRunTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="75"></TextBox>
            </StackPanel>
            </GroupBox>
            <GroupBox Header="{x:Static res:Resources.ChildTaskRunTime}">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <Label Content="{x:Static res:Resources.ActualRunTime}"></Label>
                    <Label Content="{Binding ActualRunTimeTotal, Mode=OneWay}" Width="75"></Label>
                    <Label Content="{x:Static res:Resources.PlannedRunTime}"></Label>
                    <Label Content="{Binding PlannedRunTimeTotal, Mode=OneWay}" Width="75"></Label>                
                </StackPanel>
            </GroupBox>
        </StackPanel>
        <!--Description-->
        <StackPanel x:Name="Descr">
            <Label Content="{x:Static res:Resources.DescriptionOfTask}"></Label>
            <TextBox Text="{Binding ElementName=TasksTree, Path=SelectedValue.Task.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" AcceptsReturn="True" Height="200"></TextBox>            
            <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Content="{x:Static res:Resources.AddChildTask}" Margin="2" Command="{Binding AddChildTaskCommand}" FontWeight="Normal" FontSize="12"></Button>
                <Button Content="{x:Static res:Resources.RemoveTask}" Margin="2"  Command="{Binding RemoveSelectedTaskCommand}" FontSize="12" FontWeight="Normal"></Button>
                <Button Content="{x:Static res:Resources.SaveChanges}" Margin="2"  Command="{Binding SaveChangesCommand}" FontSize="12" FontWeight="Normal"></Button>
            </StackPanel>
        </StackPanel>
    </DockPanel>


</Window>
